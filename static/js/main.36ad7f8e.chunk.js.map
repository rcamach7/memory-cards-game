{"version":3,"sources":["images/title.png","components/GameFieldAPI.js","components/App.js","index.js"],"names":["Pokemon","props","className","onClick","name","toUpperCase","src","imageSource","alt","GameFieldAPI","shuffleArray","arrayIn","array","i","length","j","Math","floor","random","temp","state","pokemons","clickedPokemons","pokemonKeys","this","generateRandomKeys","url","fetch","then","res","json","result","generatePokemon","error","console","log","indexOf","updatedClicked","push","setState","reportScore","alert","pokemon","newPokemon","clickedMe","sprites","other","front_default","id","newCollection","numKeys","keys","key","React","Component","App","currentScore","highScore","handleScoreReporting","bind","currentScoreIn","WebsiteTitle","title","Scoreboard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36ad7f8e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/title.7353063d.png\";","import React from \"react\";\nimport \"../styles/GameFieldAPI.css\"\n\nclass GameFieldAPI extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pokemons: [],\n            clickedPokemons: [],\n        }\n    }\n\n    componentDidMount() {\n        // As long as page isn't reloaded, we keep our same keys/pokemons\n        let pokemonKeys = this.generateRandomKeys(10);\n        for (let i = 0; i < pokemonKeys.length; i++) {\n            let url = \"https://pokeapi.co/api/v2/pokemon/\" + pokemonKeys[i];\n            fetch(url)\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        this.generatePokemon(result);\n                    },\n                    (error) => {\n                        console.log(error);\n                    }\n                )\n        }\n    }\n\n    clickedMe(name) {\n        let indexOfPokemon = this.state.clickedPokemons.indexOf(name);\n        // This will trigger if never clicked before.\n        if (indexOfPokemon === -1) {\n            const updatedClicked = this.state.clickedPokemons;\n            updatedClicked.push(name);\n            this.setState({\n                clickedPokemons: updatedClicked,\n            });\n            this.props.reportScore(this.state.clickedPokemons.length);\n        } else {\n            alert(\"You have already clicked me! Game Reset\");\n            this.setState({\n                clickedPokemons: [],\n            })\n            this.props.reportScore(0);\n        }\n        // Now We Must Shuffle The Pokemon!\n        this.setState({\n            pokemons: this.shuffleArray(this.state.pokemons),\n        });\n    }\n\n    generatePokemon(pokemon) {\n        const newPokemon = <Pokemon onClick={() => this.clickedMe(pokemon.name)}\n                                    imageSource={pokemon.sprites.other['official-artwork'].front_default}\n                                    name={pokemon.name} key={pokemon.id}/>\n\n        let newCollection = this.state.pokemons;\n        newCollection.push(newPokemon);\n        this.setState({\n            pokemons: newCollection,\n        });\n    }\n\n    shuffleArray = (arrayIn) => {\n        let array = arrayIn;\n        for (let i = array.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i + 1));\n            let temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    }\n\n    generateRandomKeys(numKeys) {\n        let keys = [];\n        for (let i = 0; i < numKeys; i++) {\n            let key = Math.floor(Math.random() * 100);\n            // Ensures we don't get repeated keys which means repeated pokemon\n            while (keys.indexOf(key) !== -1) {\n                key = Math.floor(Math.random() * 100);\n            }\n            keys.push(key);\n        }\n        return keys;\n    }\n\n    render() {\n        return (\n            <div className=\"GameFieldAPI\">\n                {this.state.pokemons}\n            </div>\n        );\n    }\n}\n\nfunction Pokemon(props) {\n    return (\n        <div className=\"pokemon\" onClick={props.onClick}>\n            <p>{props.name.toUpperCase()}</p>\n            <img src={props.imageSource} alt=\"pokemon\"/>\n        </div>\n    )\n}\n\nexport default GameFieldAPI;","import \"../styles/App.css\";\nimport React from \"react\";\nimport title from \"../images/title.png\"\nimport GameFieldAPI from \"./GameFieldAPI\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentScore: 0,\n            highScore: 0,\n        }\n        this.handleScoreReporting = this.handleScoreReporting.bind(this);\n    }\n\n    handleScoreReporting(currentScoreIn) {\n        this.setState({\n            currentScore: currentScoreIn,\n        })\n        if (currentScoreIn > this.state.highScore) {\n            this.setState({\n                highScore: currentScoreIn,\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <WebsiteTitle/>\n\n                <Scoreboard currentScore={this.state.currentScore} highScore={this.state.highScore}/>\n\n                <GameFieldAPI reportScore = {this.handleScoreReporting} />\n                <p className=\"copyright\">Copyright Â© 2021 Ricardo Camacho Mireles</p>\n            </div>\n        );\n    }\n}\n\nconst WebsiteTitle = () => {\n    return (\n        <div className=\"WebsiteTitle\">\n            <img src={title} alt=\"\"/>\n        </div>\n    )\n}\n\nconst Scoreboard = (props) => {\n    return (\n        <div className=\"Scoreboard\">\n            <h3>Current Score: {props.currentScore} | High Score: {props.highScore}</h3>\n        </div>\n    )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}